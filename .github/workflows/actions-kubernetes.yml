name: Build & Deploy to AKS

on:
  push:
    branches: main
  pull_request:
    branches: main

jobs:

  build:
    runs-on: ubuntu-latest
    env:
      DOCKER_REPOSITORY: houssemdocker
      IMAGE_NAME: webapp
      IMAGE_TAG: $GITHUB_RUN_NUMBER
    
    steps:

    - uses: actions/checkout@v2
  
    - name: Build Docker Image
      run:
        docker build ./MvcApp/ --file ./MvcApp/Dockerfile --tag $DOCKER_REPOSITORY/$IMAGE_NAME:$GITHUB_RUN_NUMBER --build-arg=token=ZGEzNTQ5Y2QyNjAx --no-cache
    
    - name: Login to Azure
     uses: azure/login@v1
          with:
            creds: ${{ secrets.AZURE_CREDENTIALS }}
            
    - name: Push Image to Azure Container Registry
      run:
        docker push $DOCKER_REPOSITORY/$IMAGE_NAME:$GITHUB_RUN_NUMBER
        
    - name: 'Build and push image'
          uses: azure/docker-login@v1
          with:
            login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
            username: ${{ secrets.REGISTRY_USERNAME }}
            password: ${{ secrets.REGISTRY_PASSWORD }}
    - run: |
            docker build . -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/sampleapp:${{ github.sha }}
            docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/sampleapp:${{ github.sha }}
    # Set the target AKS cluster.
    - uses: Azure/aks-set-context@v1
      with:
        creds: '${{ secrets.AZURE_CREDENTIALS }}'
        cluster-name: aks
        resource-group: aks
        
    - name: Hello world
      run: echo Hello world $GITHUB_RUN_NUMBER
        
    - uses: cschleiden/replace-tokens@v1
      with:
        files: '["kubernetes/*.yaml"]'
      env:
        IMAGE_TAG: $GITHUB_RUN_NUMBER
        
    - uses: Azure/k8s-deploy@v1
      with:
        manifests: |
          kubernetes/mssql-pv.azure.yaml
          kubernetes/mssql-secret.yaml
          kubernetes/mssql-deployment.yaml
          kubernetes/mvc-deployment.azure.yaml
          kubernetes/mssql-configmap.yaml
    
    - name: Run Kube Advisor to check for Resource Limits
      continue-on-error: true
      run:
        kubectl run --rm -i -t kubeadvisor --image=mcr.microsoft.com/aks/kubeadvisor --restart=Never > PodResourceLimits.txt
